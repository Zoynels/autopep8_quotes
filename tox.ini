[tox]
envlist = mypy, help, pep8, autopep8_quotes, autopep8_quotes_test, check_manifest, twine, pypy3, py{38}

[testenv]
passenv = TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* PYTEST_ADDOPTS
extras =
    colorama
deps =
    -r {toxinidir}/requirements.txt
    pytest
commands =
    python -m pytest -vv
depends =
    pypy3,py{38}: twine, check_manifest

[pytest]
basepython =
    py38: python3.8
    pypy3: pypy3
python_files = test*.py
norecursedirs = .git _build tmp* .eggs
addopts = --cov-report=term-missing:skip-covered --cov-append --cov=autopep8_quotes
timeout = 480
markers =
    asyncio: mark a atest as an asyncio test.
    basic: mark a test as a basic feature test.
    files: mark a test as a test with actual files.
    api: mark a test as an interface test.
    unit: mark a test as an unit test.
    cli: mark a test as a cli test.
    benchmark: mark a test as a benchmarking.

[testenv:help]
basepython = python3.8
deps =
    -r {toxinidir}/requirements.txt
skip_install = false
commands =
    autopep8_quotes --help

[testenv:mypy]
basepython = python3.8
deps =
    -r {toxinidir}/requirements.txt
    mypy>=0.770
    mypy_extensions>=0.4.3
    pycryptodome>=3.9.7
skip_install = true
commands =
    #mypy --help
    mypy --strict autopep8_quotes

[mypy]
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = true
show_column_numbers = true

[flake8]
ignore = F841
max-line-length = 160
inline-quotes = "
multiline-quotes = """
docstring-quotes = """

[autopep8_quotes]
normalize-string-quotes = true
lowercase-string-prefix = true
remove-string-u-prefix = true
multiline-quotes = """
docstring-quotes = """
print-files = true

[testenv:autopep8_quotes_test]
basepython = python3.8
commands =
    python -m pip download -r requirements_test.txt --dest "/github.com/pip_cache/" --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org
    python -m pip install -r requirements_test.txt --no-index --find-links="/github.com/pip_cache/" --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org
    #autopep8_quotes --recursive --save-values-to-file tests/good/tests_002_raw.py
    #autopep8_quotes --recursive --save-values-to-file h:/Programming/Python/Miniconda3/

[isort]
known_first_party = autopep8_quotes
known_third_party = docutils,flake8,pyannotate_runtime,pytest,pytz,setuptools,sphinx,yaml,untokenize,tokenize,ast,setuptools
line_length = 160
indent='    '
multi_line_output = 3
force_single_line = true

[testenv:autopep8_quotes]
basepython = python3.8
commands =
    python -m pip download -r requirements_test.txt --dest "/github.com/pip_cache/" --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org
    python -m pip install -r requirements_test.txt --no-index --find-links="/github.com/pip_cache/" --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org
    # Show help information
    autopep8_quotes --help
    #isort --help

    # Test transformation of strings
    autopep8_quotes --new-file --diff --diff-to-txt --recursive tests/good/tests_002_raw.py
    #autopep8_quotes --new-file --diff --recursive tests/good
    #flake8 --filename=*.autopep8_quotes tests/good {posargs}

    # Change package
    isort --diff --recursive autopep8_quotes
    isort --atomic --recursive autopep8_quotes
    isort --recursive autopep8_quotes
    autopep8_quotes --in-place --diff --recursive autopep8_quotes
    autopep8 --aggressive --recursive --diff autopep8_quotes
    autopep8 --aggressive --recursive --in-place autopep8_quotes
    flake8 --filename=*.py autopep8_quotes {posargs}

    # Change setup.py
    #autopep8_quotes --in-place --diff --recursive setup.py
    #autopep8 --aggressive --recursive --diff setup.py
    #autopep8 --aggressive --recursive --in-place setup.py
    #flake8 --filename=*.py setup.py {posargs}



[testenv:pep8]
basepython = python3.8
commands =
    python -m pip download -r requirements_test.txt --dest "/github.com/pip_cache/" --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org
    python -m pip install -r requirements_test.txt --no-index --find-links="/github.com/pip_cache/" --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org
    #python -m pip install -e "/github.com/Zoynels/unify/" --no-index --find-links="/github.com/pip_cache/" --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org

    #unify --help
    #unify --in-place --diff --normalize_string_quotes --multiline_quotes '"""' --inline_quotes '"' --lowercase_string_prefix --remove_string_u_prefix test_quotes.py
    autopep8_quotes --in-place --diff --normalize_string_quotes --multiline_quotes '"""' --inline_quotes '"' --lowercase_string_prefix --remove_string_u_prefix --recursive autopep8_quotes
    autopep8_quotes --in-place --diff --normalize_string_quotes --multiline_quotes '"""' --inline_quotes '"' --lowercase_string_prefix --remove_string_u_prefix --recursive setup.py

    #autopep8 --aggressive --recursive --diff test_quotes.py
    #autopep8 --aggressive --recursive --in-place test_quotes.py
    #flake8 test_quotes.py {posargs}

    #autopep8 --aggressive --recursive --diff test_quotes.py
    #flake8 --exit-zero test_quotes.py {posargs}


    #autopep8 --help
    # --diff show what changes should be
    # --in-place apply changes
    autopep8 --aggressive --recursive --diff setup.py
    autopep8 --aggressive --recursive --in-place setup.py
    #autopep8 --aggressive --recursive --diff tests
    #autopep8 --aggressive --recursive --in-place tests
    autopep8 --aggressive --recursive --diff autopep8_quotes
    autopep8 --aggressive --recursive --in-place autopep8_quotes

    isort --atomic --verbose --recursive autopep8_quotes
    #isort --atomic --verbose --recursive tests
    isort --atomic --verbose --recursive setup.py
    isort --atomic --verbose --recursive requirements.txt
    isort --atomic --verbose --recursive requirements_test.txt


    flake8 --exit-zero setup.py {posargs}
    #flake8 --exit-zero tests {posargs}
    flake8 --exit-zero autopep8_quotes {posargs}

[testenv:check_manifest]
basepython = python3.8
deps =
    check-manifest
skip_install = true
ignore_errors=true
commands =
    check-manifest

[testenv:twine]
basepython = python3.8
deps =
    twine
skip_install = true
ignore_errors=true
commands =
    python setup.py sdist
    twine check dist/*
